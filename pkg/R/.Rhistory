library("monocle")
install.packages("Biobase")
source("https://bioconductor.org/biocLite.R")
biocLite("Biobase")
library("monocle")
source("https://bioconductor.org/biocLite.R")
biocLite("Biobase")
library("monocle")
source("https://bioconductor.org/biocLite.R")
biocLite("Biobase")
source("https://bioconductor.org/biocLite.R")
biocLite("monocle")
library("monocle")
.libPaths()
.libPaths()
require(devtools)
devtools::install_github("cz-ye/DECENT")
require(devtools)
devtools::install_github("cz-ye/DECENT")
require(devtools)
devtools::install_github("cz-ye/DECENT")
devtools::find_rtools()
Sys.getenv('PATH')
devtools::find_rtools()
if (!require(devtools)) install.packages(devtools)
if (!require(Rmagic)) devtools::install_github("KrishnaswamyLab/magic/Rmagic")
lib.path()
library(devtools)
install_github("Vivianstats/scImpute")
install.packages("penalized")
library(devtools)
install_github("Vivianstats/scImpute")
install.packages("survival")
library(devtools)
install_github("Vivianstats/scImpute")
install.packages("survival")
remove.packages("survival")
library("survival")
install.packages("survival")
install.packages("survival")
library(devtools)
install_github("Vivianstats/scImpute")
rm(list=ls())
library("scImpute")
library("SAVER")
library("DrImpute")
library("DrImpute")
source("ImputeMethods.R")
library("Seurat")
library("Linnorm")
library("Rmagic")
data("linnarsson")
counts = linnarsson
source('D:/work/paper/my/Impute_Ensemble/code/ImputeMethods.R')
count_scimpute = Execute.scimpute(counts, drop_thre = 0.1, Kcluster = 2, labeled = FALSE,
labels = NULL, genelen = NULL, ncores = 1)
count_scimpute[1:5,1:5]
counts[1:5,1:5]
30*30
30*180
median(0:15)
log(100)
log10(100)
library("devtools")
ï¼Ÿinstall_github
?install_github
0.65*4*3
0.35*3*4
2.4*3
7.8+4.2+7.2+3
28.6-22.2
5.28+0.2+0.12
2+22.2+5.6+19.2+4
remove.packages("DiffNetFDR")
library(DiffNetFDR)
library("devtools")
install_github("Zhangxf-ccnu/DiffNetFDR", subdir="pkg")
library(DiffNetFDR)
?DiffNet.FDR
data("TCGA.BRCA")
result = DiffNet.FDR(TCGA.BRCA$X,TCGA.BRCA$group, alpha = 0.2, test.type = "pcor")
Diff.net.connected = result$Diff.net.connected
# Visualize the estimated differential network in an interactive manner.
tkid <- tkplot(Diff.net.connected, vertex.size= degree(Diff.net.connected)*1.2, layout =layout_with_fr,
vertex.color="red", vertex.group.cex=0.8, edge.width =1.2, edge.color="orange")
# Visualize the estimated differential network in a non-interactive manner.
# grab the coordinates from tkplot
loc <- tkplot.getcoords(tkid)
plot(Diff.net.connected, layout=loc, vertex.size= degree(Diff.net.connected)*1.2, vertex.color="red",
vertex.group.cex=0.8, edge.width =1.2, edge.color="orange")
?plot
8.803+2.296*2+2.435+3.503+2.829
22.162/6
60*12
install.packages("ncpen")
s0 = sam.gen.fun(n=100,p=20,q=10,bmin=0.5,bmax=1,corr=0.5,family="poisson", seed = 1234)
x.mat = s0$x.mat
y.vec = s0$y.vec
library(ncpen)
s0 = sam.gen.fun(n=100,p=20,q=10,bmin=0.5,bmax=1,corr=0.5,family="poisson", seed = 1234)
x.mat = s0$x.mat
y.vec = s0$y.vec
fit = ncpen(y.vec=y.vec, x.mat=x.mat, family="poisson")
fit = ncpen(y.vec=y.vec, x.mat=x.mat, family="poisson", lambda = 0.2)
fit$coefficients
library(glmnet)
?glmnet
fit2 = ncpen(y=y.vec, x=x.mat, family="poisson", lambda = 0.2)
fit2 = ncpen(x.mat, y.vec, family="poisson", lambda = 0.2)
y.vec
x.mat
fit2 = glmnet(x.mat, y.vec, family="poisson", lambda = 0.2)
fit$coefficients
fit2$coefficients
fit2$beta
fit2$lambda
fit$lambda
fit2 = glmnet(x.mat, y.vec, family="poisson", lambda = 0.2, standardize = FALSE)
fit2$beta
fit$coefficients
pfit = predict(fit2,x,type="response")
pfit = predict(fit2,x.mat,type="response")
pfit
pfit[1:10]
pfit`` = predict(fit,x.mat,type="response")
pfit1 = predict(fit,x.mat,type="response")
pfit1[1:10]
y.vec[1:10]
N=500; p=20
nzc=5
x=matrix(rnorm(N*p),N,p)
beta=rnorm(nzc)
f = x[,seq(nzc)]%*%beta
mu=exp(f)
y=rpois(N,mu)
fit=glmnet(x,y,family="poisson")
plot(fit)
pfit = predict(fit,x,s=0.001,type="response")
plot(pfit,y)
?ncpen
fit2=ncpen(y,x,family="poisson")
plot(fit2)
plot(fit)
fit=glmnet(x,y,family="poisson", lambda = 0.2)
pfit = predict(fit,x,type="response")
plot(pfit,y)
fit2=ncpen(y,x,family="poisson", lambda = 0.2)
plot(fit2)
pfit2 = predict(fit2,x,type="response")
pfit2 = predict(fit2,x,type="response")
plot(fit2)
pfit2
pfit2 = predict(fit2,x,type="response")
plot(fit2)
pfit2
plot(pfit,y)
plot(fit2, y )
fit2
View(pfit2)
?ncpen
fit2=ncpen(y,x,family="poisson", lambda = 0.2)
plot(fit2)
pfit2 = predict(fit2,x,type="response")
fit2=ncpen(y,x,family="poisson", lambda = 0.2)
pfit2 = predict(fit2,x,type="response")
plot(fit2, y )
pfit = predict(fit,x,type="response")
N=500; p=20
nzc=5
x=matrix(rnorm(N*p),N,p)
beta=rnorm(nzc)
f = x[,seq(nzc)]%*%beta
mu=exp(f)
y=rpois(N,mu)
fit=glmnet(x,y,family="poisson", lambda = 0.2)
plot(fit)
pfit = predict(fit,x,type="response")
plot(pfit,y)
fit2=ncpen(y,x,family="poisson", lambda = 0.2)
pfit2 = predict(fit2,x,type="response")
plot(fit2, y )
plot(pfit2, y )
cbind(y, pfit, pfit2)
a = cbind(y, pfit, pfit2)
View(a)
b = cbind(beta, fit$beta, fit2$coefficients)
beta
nzc
b = cbind(fit$beta, fit2$coefficients)
fit$beta
fit2$coefficients
?ncpen
b = cbind(fit$beta, fit2$coefficients[-1])
b
fit2=ncpen(y,x,family="poisson", penalty = "lasso", lambda = 0.2)
pfit2 = predict(fit2,x,type="response")
plot(pfit2, y )
a = cbind(y, pfit, pfit2)
b = cbind(fit$beta, fit2$coefficients[-1])
b
?ncpen
N=500; p=20
nzc=5
x=matrix(rnorm(N*p),N,p)
beta=rnorm(nzc)
f = x[,seq(nzc)]%*%beta
mu=exp(f)
y=rpois(N,mu)
fit=glmnet(x,y,family="poisson", lambda = 0.2, intercept = FALSE)
plot(fit)
pfit = predict(fit,x,type="response")
plot(pfit,y)
fit2=ncpen(y,x,family="poisson", penalty = "lasso", lambda = 0.2, intercept = FALSE)
pfit2 = predict(fit2,x,type="response")
plot(pfit2, y )
a = cbind(y, pfit, pfit2)
b = cbind(fit$beta, fit2$coefficients)
b
N=500; p=20
nzc=5
x=matrix(rnorm(N*p),N,p)
beta=rnorm(nzc)
f = x[,seq(nzc)]%*%beta
mu=exp(f)
y=rpois(N,mu)
fit=glmnet(x,y,family="poisson", lambda = 0.2, intercept = FALSE)
plot(fit)
pfit = predict(fit,x,type="response")
plot(pfit,y)
?glmnet
fit=glmnet(x,y,family="poisson", lambda = 0.2, intercept = FALSE)
N=500; p=20
nzc=5
x=matrix(rnorm(N*p),N,p)
beta=rnorm(nzc)
f = x[,seq(nzc)]%*%beta
mu=exp(f)
y=rpois(N,mu)
fit=glmnet(x,y,family="poisson", lambda = 0.2, standardize = FALSE, intercept = FALSE)
plot(fit)
N=500; p=20
nzc=5
x=matrix(rnorm(N*p),N,p)
beta=rnorm(nzc)
f = x[,seq(nzc)]%*%beta
mu=exp(f)
y=rpois(N,mu)
fit=glmnet(x,y,family="poisson", lambda = 0.2, standardize = FALSE)
plot(fit)
pfit = predict(fit,x,type="response")
plot(pfit,y)
fit2=ncpen(y,x,family="poisson", penalty = "lasso", lambda = 0.2, standardize = FALSE)
pfit2 = predict(fit2,x,type="response")
plot(pfit2, y )
a = cbind(y, pfit, pfit2)
b = cbind(fit$beta, fit2$coefficients)
b
b = cbind(fit$beta, fit2$coefficients[-1])
b
fit2=ncpen(y,x,family="poisson", penalty = "lasso", lambda = 0.2, standardize = FALSE)
pfit2 = predict(fit2,x,type="response")
plot(pfit2, y )
a = cbind(y, pfit, pfit2)
b = cbind(fit$beta, fit2$coefficients[-1])
fit2=ncpen(y,x,family="poisson", penalty = "lasso", lambda = 0.2, standardize = FALSE)
pfit2 = predict(fit2,x,type="response")
plot(pfit2, y )
fit2$coefficients
b = cbind(fit$beta, fit2$coefficients)
b
N=500; p=20
nzc=5
x=matrix(rnorm(N*p),N,p)
beta=rnorm(nzc)
f = x[,seq(nzc)]%*%beta
mu=exp(f)
y=rpois(N,mu)
fit=glmnet(x,y,family="poisson", lambda = 0.2, standardize = TRUE)
plot(fit)
pfit = predict(fit,x,type="response")
plot(pfit,y)
fit2=ncpen(y,x,family="poisson", penalty = "lasso", lambda = 0.2, standardize = TRUE)
pfit2 = predict(fit2,x,type="response")
plot(pfit2, y )
a = cbind(y, pfit, pfit2)
fit2=ncpen(y,x,family="poisson", penalty = "lasso", lambda = 0.2)
pfit2 = predict(fit2,x,type="response")
plot(pfit2, y )
a = cbind(y, pfit, pfit2)
b = cbind(fit$beta, fit2$coefficients)
b = cbind(fit$beta, fit2$coefficients[-1])
b
N=500; p=20
nzc=5
x=matrix(rnorm(N*p),N,p)
beta=rnorm(nzc)
f = x[,seq(nzc)]%*%beta
mu=exp(f)
y=rpois(N,mu)
fit=glmnet(x,y,family="poisson", lambda = 0.2, standardize = TRUE)
plot(fit)
pfit = predict(fit,x,type="response")
plot(pfit,y)
fit2=ncpen(y,x,family="poisson", penalty = "lasso", lambda = 0.2)
pfit2 = predict(fit2,x,type="response")
plot(pfit2, y )
a = cbind(y, pfit, pfit2)
b = cbind(fit$beta, fit2$coefficients[-1])
b
N=500; p=20
nzc=5
x=matrix(rnorm(N*p),N,p)
beta=rnorm(nzc)
f = x[,seq(nzc)]%*%beta
mu=exp(f)
y=rpois(N,mu)
fit=glmnet(x,y,family="poisson", lambda = 0.2, standardize = TRUE)
plot(fit)
pfit = predict(fit,x,type="response")
plot(pfit,y)
fit2=ncpen(y,x,family="poisson", penalty = "lasso", lambda = 0.2)
pfit2 = predict(fit2,x,type="response")
plot(pfit2, y )
a = cbind(y, pfit, pfit2)
b = cbind(fit$beta, fit2$coefficients[-1])
b
N=500; p=20
nzc=5
x=matrix(rnorm(N*p),N,p)
beta=rnorm(nzc)
f = x[,seq(nzc)]%*%beta
mu=exp(f)
y=rpois(N,mu)
fit=glmnet(x,y,family="poisson", lambda = 0.2, standardize = TRUE)
plot(fit)
pfit = predict(fit,x,type="response")
plot(pfit,y)
fit2=ncpen(y,x,family="poisson", penalty = "lasso", lambda = 0.2)
pfit2 = predict(fit2,x,type="response")
plot(pfit2, y )
a = cbind(y, pfit, pfit2)
b = cbind(fit$beta, fit2$coefficients[-1])
b
?ncpen
?glmnet
N=500; p=20
nzc=5
x=matrix(rnorm(N*p),N,p)
beta=rnorm(nzc)
f = x[,seq(nzc)]%*%beta
mu=exp(f)
y=rpois(N,mu)
fit=glmnet(x,y,family="poisson", lambda = 0.2, standardize = FALSE)
plot(fit)
pfit = predict(fit,x,type="response")
plot(pfit,y)
fit2=ncpen(y,x,family="poisson", penalty = "lasso", lambda = 0.2,x.standardize=FALSE )
pfit2 = predict(fit2,x,type="response")
plot(pfit2, y )
a = cbind(y, pfit, pfit2)
b = cbind(fit$beta, fit2$coefficients[-1])
b
N=500; p=20
nzc=5
x=matrix(rnorm(N*p),N,p)
beta=rnorm(nzc)
f = x[,seq(nzc)]%*%beta
mu=exp(f)
y=rpois(N,mu)
fit=glmnet(x,y,family="poisson", lambda = 0.2, standardize = FALSE)
plot(fit)
pfit = predict(fit,x,type="response")
plot(pfit,y)
fit2=ncpen(y,x,family="poisson", penalty = "lasso", lambda = 0.2,x.standardize=FALSE )
pfit2 = predict(fit2,x,type="response")
plot(pfit2, y )
a = cbind(y, pfit, pfit2)
b = cbind(fit$beta, fit2$coefficients[-1])
b
N=500; p=20
nzc=5
x=matrix(rnorm(N*p),N,p)
beta=rnorm(nzc)
f = x[,seq(nzc)]%*%beta
mu=exp(f)
y=rpois(N,mu)
fit=glmnet(x,y,family="poisson", lambda = 0.2, standardize = FALSE)
plot(fit)
pfit = predict(fit,x,type="response")
plot(pfit,y)
fit2=ncpen(y,x,family="poisson", penalty = "lasso", lambda = 0.2,x.standardize=FALSE )
pfit2 = predict(fit2,x,type="response")
plot(pfit2, y )
a = cbind(y, pfit, pfit2)
b = cbind(fit$beta, fit2$coefficients[-1])
b
N=500; p=20
nzc=5
x=matrix(rnorm(N*p),N,p)
beta=rnorm(nzc)
f = x[,seq(nzc)]%*%beta
mu=exp(f)
y=rpois(N,mu)
fit=glmnet(x,y,family="poisson", lambda = 0.2, standardize = FALSE)
plot(fit)
pfit = predict(fit,x,type="response")
plot(pfit,y)
fit2=ncpen(y,x,family="poisson", penalty = "lasso", lambda = 0.2,x.standardize=FALSE )
pfit2 = predict(fit2,x,type="response")
plot(pfit2, y )
a = cbind(y, pfit, pfit2)
b = cbind(fit$beta, fit2$coefficients[-1])
b
?ncpen
?glmnet
fit=glmnet(x,y,family="poisson", lambda = 0.2, standardize = FALSE, intercept=FALSE)
fit
fit$beta
fit2=ncpen(y,x,family="poisson", penalty = "lasso",  intercept = FALSE, lambda = 0.2,x.standardize=FALSE )
pfit2 = predict(fit2,x,type="response")
plot(pfit2, y )
fit2$coefficients[-1]
N=500; p=20
nzc=5
x=matrix(rnorm(N*p),N,p)
beta=rnorm(nzc)
f = x[,seq(nzc)]%*%beta
mu=exp(f)
y=rpois(N,mu)
fit=glmnet(x,y,family="poisson", lambda = 0.2, standardize = FALSE, intercept=FALSE)
plot(fit)
pfit = predict(fit,x,type="response")
plot(pfit,y)
fit2=ncpen(y,x,family="poisson", penalty = "lasso",  intercept = FALSE, lambda = 0.2,x.standardize=FALSE )
pfit2 = predict(fit2,x,type="response")
plot(pfit2, y )
a = cbind(y, pfit, pfit2)
b = cbind(fit$beta, fit2$coefficients[-1])
b
fit2=ncpen(y,x,family="poisson", penalty = "lasso",  intercept = FALSE, lambda = 0.2,x.standardize=FALSE )
fit2$coefficients
fit=glmnet(x,y,family="poisson", lambda = 0.2, standardize = FALSE, intercept=FALSE)
fit2=ncpen(y,x,family="poisson", penalty = "lasso",  intercept = FALSE, lambda = 0.2,x.standardize=FALSE )
N=500; p=200
nzc=5
x=matrix(rnorm(N*p),N,p)
beta=rnorm(nzc)
f = x[,seq(nzc)]%*%beta
mu=exp(f)
y=rpois(N,mu)
fit=glmnet(x,y,family="poisson", lambda = 0.2, standardize = FALSE, intercept=FALSE)
plot(fit)
pfit = predict(fit,x,type="response")
plot(pfit,y)
fit2=ncpen(y,x,family="poisson", penalty = "lasso",  intercept = FALSE, lambda = 0.2,x.standardize=FALSE )
pfit2 = predict(fit2,x,type="response")
plot(pfit2, y )
a = cbind(y, pfit, pfit2)
b = cbind(fit$beta, fit2$coefficients[-1])
b
fit2=ncpen(y,x,family="poisson", penalty = "lasso",  intercept = FALSE, lambda = 0.2,x.standardize=FALSE )
fit2=ncpen(y,x,family="poisson", penalty = "lasso",  intercept = FALSE, lambda = 0.2,x.standardize=FALSE )
fit2=ncpen(y,x,family="poisson", penalty = "lasso",  intercept = FALSE, lambda = 0.2,x.standardize=FALSE )
fit2=ncpen(y,x,family="poisson", penalty = "lasso",  intercept = FALSE, lambda = 0.2,x.standardize=FALSE )
?sapply(list, function)
?sapply
a = -5ï¼š5
a = -5ï¼š5
a = -5:5
a
sapply(a,max, 0)
a = seq(5,-5,1)
a = seq(5,-5,-1)
sapply(a,max, 0)
12/123
setwd("D:/work/paper/my/EnImpute/data/SAVER-data-Mo")
baron_ref = readRDS("./SAVER-data-Mo/baron_human_ref.rds")
baron_samp = readRDS("./SAVER-data-Mo/baron_human_samp.rds")
colnames(baron_ref) = paste(colnames(baron_ref), 1:length(colnames(baron_ref)))
colnames(baron_samp) = paste(colnames(baron_ref), 1:length(colnames(baron_ref)))
baron = list(count.samp=baron_samp, count.ref = baron_ref)
saveRDS(baron, "./SAVER-data-Mo/baron.rds")
chen_ref = readRDS("./SAVER-data-Mo/chen_ref.rds")
chen_samp = readRDS("./SAVER-data-Mo/chen_samp.rds")
chen = list(count.samp=chen_samp, count.ref = chen_ref)
saveRDS(chen, "./SAVER-data-Mo/chen.rds")
manno_ref = readRDS("./SAVER-data-Mo/manno_human_ref.rds")
manno_samp = readRDS("./SAVER-data-Mo/manno_human_samp.rds")
manno = list(count.samp=manno_samp, count.ref = manno_ref)
saveRDS(manno, "./SAVER-data-Mo/manno.rds")
zeisel_ref = readRDS("./SAVER-data-Mo/zeisel_ref.rds")
zeisel_samp = readRDS("./SAVER-data-Mo/zeisel_samp.rds")
zeisel = list(count.samp=zeisel_samp, count.ref = zeisel_ref)
saveRDS(zeisel, "./SAVER-data-Mo/zeisel.rds")
baron = readRDS("./SAVER-data-Mo/baron.rds")
manno = readRDS("./SAVER-data-Mo/manno.rds")
zeisel = readRDS("./SAVER-data-Mo/zeisel.rds")
save(baron, file = "baron.rda", ascii = TRUE, compress = "xz")
save(manno, file = "manno.rda", ascii = TRUE, compress = "xz")
save(zeisel, file = "zeisel.rda", ascii = TRUE, compress = "xz")
baron = readRDS("./SAVER-data-Mo/baron.rds")
setwd("D:/work/paper/my/EnImpute/data")
baron = readRDS("./SAVER-data-Mo/baron.rds")
manno = readRDS("./SAVER-data-Mo/manno.rds")
zeisel = readRDS("./SAVER-data-Mo/zeisel.rds")
save(baron, file = "baron.rda", ascii = TRUE, compress = "xz")
save(manno, file = "manno.rda", ascii = TRUE, compress = "xz")
save(zeisel, file = "zeisel.rda", ascii = TRUE, compress = "xz")
setwd("D:/work/paper/my/EnImpute/R_package/20180927/EnImpute/R")
?pnorm
?saver
?sd
